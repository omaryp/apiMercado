<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="pe.gob.muni.apimercado.mapper.IComercianteMapper">
	
	<resultMap id="PersonaResultMap" type="Persona" />
	
	<resultMap id="ComercianteResultMap" type="Comerciante" extends="PersonaResultMap"/>
	
	<resultMap id="ComercianteDtoResultMap" type="ComercianteDto" />

	<select id="getEntity" resultMap="ComercianteResultMap">
		select A.id,A.ruc,A.razon_social,A.personas_id,
		B.id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		 from comerciantes A , personas B where A.personas_id = B.id and A.id = #{id}
	</select>
	
	<select id="getComercianteDni" resultMap="ComercianteResultMap" parameterType="String">
		select A.id,A.ruc,A.razon_social,A.personas_id,
		B.id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		 from comerciantes A , personas B where A.personas_id = B.id and B.dni = #{dni}
	</select>
		
	<select id="getAllEntitys" resultMap="ComercianteResultMap">
		select A.id,A.ruc,A.razon_social,A.personas_id,
		B.id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		 from comerciantes A , personas B where A.personas_id = B.id
	</select>
	
	<select id="getDatosReporte" resultMap="ComercianteDtoResultMap" parameterType="pe.gob.muni.apimercado.utils.dto.GeneralPageTable">
		select 
		A.id,
		A.ruc,
		A.razon_social,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		coalesce(H.valor_cadena1,'') sexo,
		D.codigo puesto,
		E.descripcion mercado,
		G.descripcion ubicacion
		from comerciantes A 
		inner join personas B on A.personas_id = B.id
		inner join puestos_comerciantes C on C.comerciantes_id = A.id and C.estado = 1
		inner join puestos D on D.id = C.puestos_id
		inner join mercados E on E.id = D.mercados_id
		inner join ubicaciones G on G.id = D.ubicaciones_id 
		left join parametros H on H.codigo=4 and H.valor_cadena2 = B.sexo
		<where>
        	<if test="mercados_id != 0"  >
				D.mercados_id = #{mercados_id}
			</if>
		</where>
		order by B.apellidos
	</select>

	<insert id="saveEntity" parameterType="Comerciante">
		insert into
		comerciantes(
		personas_id,ruc,razon_social)
		values(#{personas_id},#{ruc},#{razon_social})
	</insert>

	<update id="updateEntity" parameterType="Comerciante">
		Update comerciantes
		set
		ruc = #{ruc},
		razon_social = #{razon_social}
		where id = #{id}
	</update>
	
	<select id="pagingEntitys" resultMap="ComercianteResultMap" parameterType="pe.gob.muni.apimercado.utils.dto.GeneralPageTable">
		select * from(
		select A.id,A.ruc,A.razon_social,A.personas_id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		from comerciantes A , personas B where A.personas_id = B.id) T 
		<where>
			<if test="search != null">
				apellidos LIKE CONCAT(#{search},'%')
			</if>
			<if test="habilitado != null">
				and estado = #{habilitado}
			</if>
		</where>
		<if test="sort != '' and sort != null">
			ORDER BY ${sort} ${order}
		</if>
	</select>

</mapper>