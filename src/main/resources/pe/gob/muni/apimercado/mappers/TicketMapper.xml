<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pe.gob.muni.apimercado.mapper.ITicketMapper">

	<resultMap id="TicketResultMap" type="Ticket"/>
	
	<resultMap id="TicketDtoResultMap" type="TicketDto" />

	<select id="getEntity" resultMap="TicketResultMap">
		select id,
		mercados_id,
		ubicaciones_id,
		comerciantes_id,
		puestos_id,
		correlativo,
		no_habido,
		observacion,
		estado,
		pagado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from tickets where id = #{id}
	</select>

	<select id="getAllEntitys" resultMap="TicketResultMap">
		select id,
		mercados_id,
		ubicaciones_id,
		comerciantes_id,
		puestos_id,
		correlativo,
		no_habido,
		observacion,
		pagado,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from tickets
	</select>
	
	<select id="getAllTicketMercado" resultMap="TicketResultMap">
		select id,
		mercados_id,
		ubicaciones_id,
		comerciantes_id,
		puestos_id,
		correlativo,
		no_habido,
		observacion,
		pagado,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from tickets
	</select>

	<insert id="saveEntity" parameterType="Ticket">
		insert into tickets(
		mercados_id,
		ubicaciones_id,
		comerciantes_id,
		puestos_id,
		correlativo,
		no_habido,observaciones,pagado,estado,fecha_creacion, creado_por,
		fecha_modifcacion,
		modifcado_por,eliminado_por)
		values(#{mercados_id},#{ubicaciones_id},
		#{comerciantes_id},#{puestos_id},#{correlativo},#{no_habido},
		#{observaciones},#{pagado},#{estado},#{fecha_creacion},#{creado_por},
		#{fecha_modifcacion},#{modifcado_por},#{eliminado_por})
	</insert>

	<insert id="saveAllTickets" parameterType="java.util.List" >
		insert into tickets(
		mercados_id,ubicaciones_id,
		comerciantes_id,puestos_id,correlativo,no_habido,
		observaciones,pagado,estado,fecha_creacion, creado_por,
		fecha_modifcacion,modifcado_por,eliminado_por) values
		<foreach item="item" collection="list" separator=",">
			(#{item.mercados_id},#{item.ubicaciones_id},#{item.comerciantes_id},#{item.puestos_id},#{item.correlativo},#{item.no_habido},#{item.observaciones},#{item.pagado},#{item.estado},#{item.fecha_creacion},#{item.creado_por},#{item.fecha_modifcacion},#{item.modifcado_por},#{item.eliminado_por})
		</foreach>
	</insert>

	<update id="deleteEntity">
		Update tickets
		set estado = 0
		where id = #{id}
	</update>
	
	<update id="marcarTicketPagado">
		Update tickets
		set pagado = 1
		where id = #{id}
	</update>

	<update id="updateEntity" parameterType="Ticket">
		Update tickets
		set
		mercados_id = #{mercados_id},
		ubicaciones_id = #{ubicaciones_id}
		comerciantes_id = #{comerciantes_id},
		puestos_id = #{partidas_id},
		correlativo = #{correlativo},
		no_habido = #{no_habido},
		observaciones = #{observaciones},
		pagado = #{pagado},
		estado = #{estado},
		fecha_creacion = #{fecha_creacion},
		creado_por = #{creado_por},
		fecha_modifcacion = #{fecha_modifcacion},
		modifcado_por = #{modifcado_por},
		eliminado_por = #{eliminado_por}
		where id = #{id}
	</update>
	
	<select id="pagingTickets" resultMap="TicketDtoResultMap"
		parameterType="pe.gob.muni.apimercado.utils.dto.PageTableTicket">
		select
		A.id,
        B.id puestos_id,
		B.codigo codigo_puesto,
		A.mercados_id,
		E.descripcion descripcion_mercado,
		B.conceptos_id,
		F.descripcion descripcion_concepto,
		A.ubicaciones_id,
		G.descripcion descripcion_ubicacion,
		B.giro_id,
		H.valor_cadena1 descripcion_giro,
		A.comerciantes_id,
		D.dni,
		D.nombres,
		D.apellidos,
		A.estado,
		A.pagado,
		A.fecha_creacion
		from tickets A
		inner join puestos B on B.id = A.puestos_id
        left join comerciantes C on C.id = A.comerciantes_id
        inner join personas D on D.id = C.personas_id
        inner join mercados E on E.id = A.mercados_id
        inner join conceptos F on F.id = B.conceptos_id
        inner join ubicaciones G on G.id = A.ubicaciones_id	
        inner join parametros H on H.codigo=2 and H.subcodigo = B.giro_id 
        <where>
        	<if test="pagado != 2"  >
				A.pagado = #{pagado}
			</if>
			<if test="fecha_incio != null and fecha_fin != null "  >
				AND cast(A.fecha_creacion as date) between cast(#{fecha_incio} as date) and cast(#{fecha_fin} as date) 
			</if>
			<if test="comerciantes_id != '' and comerciantes_id != null">
				AND A.comerciantes_id = #{comerciantes_id} 
			</if>
			<if test="mercados_id != '' and mercados_id != null">
				AND A.mercados_id = #{mercados_id}
			</if>
		</where>
	</select>

</mapper>