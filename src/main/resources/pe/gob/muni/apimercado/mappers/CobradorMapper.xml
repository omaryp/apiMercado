<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pe.gob.muni.apimercado.mapper.ICobradorMapper">

	<resultMap id="PersonaResultMap" type="Persona" />

	<resultMap id="CobradorResultMap" type="Cobrador"
		extends="PersonaResultMap">
		<id property="idCobrador" column="id" />
	</resultMap>

	<select id="getEntity" resultMap="CobradorResultMap">
		select A.id,A.personas_id,
		A.mercados_id,
		B.id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		from cobradores A , personas B where A.personas_id = B.id and A.id = #{id}
	</select>

	<select id="getAllEntitys" resultMap="CobradorResultMap">
		select A.id,A.personas_id,
		A.mercados_id,
		B.id,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		from cobradores A , personas B where A.personas_id = B.id
	</select>

	<insert id="saveEntity" parameterType="Cobrador">
		insert into
		cobradores(personas_id,mercados_id)
		values(#{personas_id},#{mercados_id})
	</insert>

	<update id="updateEntity" parameterType="Cobrador">
		Update cobradores
		set
		personas_id = #{personas_id},
		mercados_id = #{mercados_id}
		where id = #{id}
	</update>
	
	<update id="deleteEntity" parameterType="Cobrador">
		delete from cobradores
		where personas_id = #{id}
	</update>

	<select id="pagingEntitys" resultMap="CobradorResultMap"
		parameterType="pe.gob.muni.apimercado.utils.dto.GeneralPageTable">
		select * from(
		select
		A.id,
		A.personas_id,
		A.mercados_id,
		C.descripcion,
		B.nombres,
		B.apellidos,
		B.dni,
		B.telefono,
		B.direccion,
		B.correo,
		B.fecha_nacimiento,
		B.estado,
		B.fecha_creacion,
		B.creado_por,
		B.fecha_modifcacion,
		B.modifcado_por,
		B.eliminado_por
		from cobradores A 
		inner join personas B on A.personas_id = B.id
		inner join mercados C on C.id = A.mercados_id) T
		<where>
			<if test="search != null">
				T.apellidos LIKE CONCAT(#{search},'%')
			</if>
		</where>
		<if test="sort != '' and sort != null">
			ORDER BY ${sort} ${order}
		</if>
	</select>

</mapper>