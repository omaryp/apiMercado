<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pe.gob.muni.apimercado.mapper.IPuestoMapper">

	<resultMap id="PuestoResultMap" type="Puesto" />
	
	<resultMap id="PuestoDtoResultMap" type="PuestoDto" />

	<select id="getEntity" resultMap="PuestoResultMap">
		select
		id,
		codigo,
		mercados_id,
		ubicaciones_id,
		conceptos_id,
		giro_id,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from puestos where id = #{id}
	</select>

	<select id="getAllEntitys" resultMap="PuestoResultMap">
		select
		id,
		codigo,
		mercados_id,
		ubicaciones_id,
		conceptos_id,
		giro_id,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from puestos
	</select>
	
	<select id="getAllPuestosDtoMercado" resultMap="PuestoDtoResultMap" parameterType="int">
		select
		A.id,
		A.codigo,
		A.mercados_id,
		E.descripcion descripcion_mercado,
		A.conceptos_id,
		F.descripcion descripcion_concepto,
		A.ubicaciones_id,
		G.descripcion descripcion_ubicacion, 
		A.giro_id,
		H.valor_cadena1 descripcion_giro,
		B.comerciantes_id,
		D.dni,
		D.nombres,
		D.apellidos,
		A.estado
		from puestos A
		inner join puestos_comerciantes B on A.id = B.puestos_id
		left join comerciantes C on C.id = B.comerciantes_id 
		inner join personas D on D.id = C.personas_id
		inner join mercados E on E.id = A.mercados_id
		inner join conceptos F on F.id = A.conceptos_id
		inner join ubicaciones G on G.id = A.ubicaciones_id
		inner join parametros H on H.codigo=2 and H.subcodigo = A.giro_id
		where A.mercados_id = #{id}
	</select>

	<select id="getAllPuestosMercado" resultMap="PuestoResultMap"
		parameterType="int">
		select
		id,
		codigo,
		mercados_id,
		ubicaciones_id,
		conceptos_id,
		giro_id,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from puestos
		where mercados_id = #{id}
	</select>

	<insert id="saveEntity" parameterType="Puesto">
		insert into puestos(
		codigo,mercados_id,ubicaciones_id,conceptos_id,
		giro_id,estado,fecha_creacion,creado_por,fecha_modifcacion,
		modifcado_por, eliminado_por)
		values(
		#{codigo},#{mercados_id},#{ubicaciones_id},#{conceptos_id},
		#{giro_id},#{estado},#{fecha_creacion},#{creado_por},#{fecha_modifcacion},
		#{modifcado_por},#{eliminado_por})
	</insert>

	<update id="deleteEntity">
		Update puestos
		set estado = 0
		where id = #{id}
	</update>

	<update id="updateEntity" parameterType="Puesto">
		Update puestos
		set
		codigo = #{codigo},
		mercados_id = #{mercados_id},
		ubicaciones_id = #{ubicaciones_id}, 
		conceptos_id = #{conceptos_id},
		giro_id = #{giro_id},
		estado = #{estado},
		fecha_modifcacion = #{fecha_modifcacion},
		modifcado_por = #{modifcado_por},
		eliminado_por = #{eliminado_por}
		where id = #{id}
	</update>

	<select id="pagingEntitys" resultMap="PuestoResultMap"
		parameterType="pe.gob.muni.apimercado.utils.dto.GeneralPageTable">
		select id,
		codigo,
		mercados_id,
		ubicaciones_id,
		conceptos_id,
		giro_id,
		estado,
		fecha_creacion,
		creado_por,
		fecha_modifcacion,
		modifcado_por,
		eliminado_por
		from puestos
		<where>
			<if test="filter != '' and filter != null">
				mercados_id = #{filter}
			</if>
		</where>
		<if test="sort != '' and sort != null">
			ORDER BY #{sort} #{order}
		</if>
	</select>
	
	<select id="pagingDtoEntitys" resultMap="PuestoDtoResultMap"
		parameterType="pe.gob.muni.apimercado.utils.dto.GeneralPageTable">
		select
		A.id,
		A.codigo,
		A.mercados_id,
		E.descripcion descripcion_mercado,
		A.conceptos_id,
		F.descripcion descripcion_concepto,
		A.ubicaciones_id,
		G.descripcion descripcion_ubicacion,
		A.giro_id,
		H.valor_cadena1 descripcion_giro,
		B.comerciantes_id,
		D.dni,
		D.nombres,
		D.apellidos,
		A.estado
		from puestos A
		inner join puestos_comerciantes B on
		A.id = B.puestos_id
		left join comerciantes C on C.id = B.comerciantes_id
		inner join personas D on D.id = C.personas_id
		inner join mercados E on E.id = A.mercados_id
		inner join conceptos F on F.id = A.conceptos_id
		inner join ubicaciones G on G.id = A.ubicaciones_id
		inner join parametros H on H.codigo=2 and H.subcodigo = A.giro_id 
		<where>
			<if test="search != '' and search != null">
				D.apellidos LIKE CONCAT(#{search},'%')
			</if>
			<if test="filter != '' and filter != null">
				<if test="search != '' and search != null">
					and
				</if>
				A.mercados_id = #{filter}
			</if>
		</where>
		Order by LPAD(A.codigo,20,'0') ASC,ubicaciones_id
	</select>

</mapper>